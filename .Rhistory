sin(deg2rad(angles[i]))*lineSeq[1]
if(!is.null(x2)){
valuesPtrain[i,1] = cos(deg2rad(angles[i]))*drTrain[1,i]*(rad-lineSeq[1]) +
cos(deg2rad(angles[i]))*lineSeq[1]
valuesPtrain[i,2] = sin(deg2rad(angles[i]))*drTrain[1,i]*(rad-lineSeq[1]) +
sin(deg2rad(angles[i]))*lineSeq[1]
}
textP[i,1] = cos(deg2rad(angles[i]))*1.0*rad
textP[i,2] = sin(deg2rad(angles[i]))*1.08*rad
}
polygon(y = valuesP[,2], x = valuesP[,1], col = colRec[data],border = colRecBorder[data], lwd = 1.5)
points(y = valuesP[,2], x = valuesP[,1], pch = 16, col = colRecBorder[data], cex = cexPoints)
if(!is.null(x2)){
polygon(y = valuesPtrain[,2], x = valuesPtrain[,1], col = colRec2[data],border = colRecBorder[data], lwd = 1.5, lty = 2)
points(y = valuesPtrain[,2], x = valuesPtrain[,1], pch = 16, col = colRecBorder[data], cex = cexPoints, lty = 2)
}
## Text
if(data == 1 || !singlePanel){
measures = stepsText
if(!is.null(measures)){
strl = max(sapply(measures,nchar))
# measures = as.vector(sapply(measures, function(x, strl){
#     if((strl - nchar(x)) > 0)return(do.call(paste0, args = as.list( x, c(rep(" ",strl - nchar(x))))))
#     else return(x)
#   } ,strl))
# textP[,1][7] = textP[,1][7] - 0.3
# textP[,2][7] = textP[,2][7] - 0.3
anglesP = angles - 90
pos = sapply(angles, function(x) {
if(x >= 45 && x <= 95 ) return(3)
if(x>95 && x<240) return(2)
if(x>=240 && x<=285) return(1)
if(x>285 &&x<=450) return(4)
if(x<45) return(4)
})
text(x = textP[,1], y = textP[,2], labels = measures, xpd = T, font = 2, cex = cexSteps, pos = pos)
}
procent[,1] = 0.2
procent[,2] = lineSeq
text(x = procent[,1], y = procent[,2], labels = c("  0%", " 25%", " 50%", " 75%", "100%"),
adj = c(-0.2,0.8), font = 2, cex = cexProcent)
if(!is.null(titles)) title(main = titles, outer = F)
}
#
angles
library(Aranea)
library(Aranea)
library(Aranea)
library(Aranea)
c("  0%", " 25%", " 50%", " 75%", "100%")
library(Aranea)
library(Aranea)
Results = readRDS(file = "../AnalysisOfTM/AnalyseTM/Results/aggregatedResults.RDS")
Results = readRDS(file = "../AnalysisOfTM/AnalyseTM/Results/aggregatedResults.RDS")
test = Results$combinedTable[Results$combinedTable$set == "test",]
train = Results$combinedTable[Results$combinedTable$set == "train",]
colnames(test) = c("auc", "f1", "bac", "acc", "fdr", "fpr", "npv", "precision","specificity", "sensitivity", "tss", "set", "method", "balance")
colnames(train) = c("auc", "f1", "bac", "acc", "fdr", "fpr", "npv", "precision","specificity", "sensitivity", "tss", "set", "method", "balance")
test = test[order(test$tss, decreasing = T),]
bestTest = test[!duplicated(test$method),]
bestTest = bestTest[order(bestTest$auc),]
bestTrain = train[paste0(rep("tr",7),substr(rownames(bestTest),3,4)),]
library(RColorBrewer)
library(Aranea)
cols = addA(brewer.pal(n = 9, name = 'Set1')[c(1:5,7,8)], 0.8)
par(mfcol = c(1,1), oma = c(0,0,0,0) + 0.1, mar = c(0,0,1,0)+0.3, las=1, mgp=c(1.5, 0.5, 0), lwd=75/75, cex.axis=3/3, cex.lab=2/3, tcl=(-0.2),font.axis = 2, bty="l")
bestTest2 = bestTest
bestTrain2 = bestTrain
bestTest2$tss = bestTest2$tss/2
bestTrain2$tss = bestTrain2$tss/2
Aranea::multiSpider(x1 = bestTest2[,c(1,4,8:10)], x2 = bestTrain2[,c(1,4,8:10)],
cexSteps = c(NA,0.7),cexProcent = c(0.5,0.5),
alphaRec = 0.3, alphaSpider = 0.4,
colRec = cols, colRecBorder  = cols,
titles =  c("naive", "BRT", "SVM", "kNN", "DNN", "CNN" ,"RF"), cexPoints = 0.7,
stepsText = c("AUC", "ACC", "Prec", "Spec", "Sens"),
twistSteps = 18,circleLines = c(5,3),
rectangular = T)
legend(x = 10,y = -12,border = "n",legend = c("Validation", "Training"), lty = c(1,2),xpd = NA, cex = 0.7, bty = "n", text.font = 2)
cols = addA(RColorBrewer::brewer.pal(n = 9, name = 'Set1')[c(1:5,7,8)], 0.8)
par(mfcol = c(1,1), oma = c(0,0,0,0) + 0.1, mar = c(0,0,1,0)+0.3, las=1, mgp=c(1.5, 0.5, 0), lwd=75/75, cex.axis=3/3, cex.lab=2/3, tcl=(-0.2),font.axis = 2, bty="l")
bestTest2 = bestTest
# Spider chart
library(RColorBrewer)
library(Aranea)
addA = function(col, alpha = 0.25) apply(sapply(col, col2rgb)/255, 2, function(x) rgb(x[1], x[2], x[3], alpha=alpha))
cols = addA(RColorBrewer::brewer.pal(n = 9, name = 'Set1')[c(1:5,7,8)], 0.8)
par(mfcol = c(1,1), oma = c(0,0,0,0) + 0.1, mar = c(0,0,1,0)+0.3, las=1, mgp=c(1.5, 0.5, 0), lwd=75/75, cex.axis=3/3, cex.lab=2/3, tcl=(-0.2),font.axis = 2, bty="l")
bestTest2 = bestTest
bestTrain2 = bestTrain
bestTest2$tss = bestTest2$tss/2
bestTrain2$tss = bestTrain2$tss/2
Aranea::multiSpider(x1 = bestTest2[,c(1,4,8:10)], x2 = bestTrain2[,c(1,4,8:10)],
cexSteps = c(NA,0.7),cexProcent = c(0.5,0.5),
alphaRec = 0.3, alphaSpider = 0.4,
colRec = cols, colRecBorder  = cols,
titles =  c("naive", "BRT", "SVM", "kNN", "DNN", "CNN" ,"RF"), cexPoints = 0.7,
stepsText = c("AUC", "ACC", "Prec", "Spec", "Sens"),
twistSteps = 18,circleLines = c(5,3),
rectangular = T)
legend(x = 10,y = -12,border = "n",legend = c("Validation", "Training"), lty = c(1,2),xpd = NA, cex = 0.7, bty = "n", text.font = 2)
library(Aranea)
multiCoords = matrix(0,8,4)
multiCoords[1,] = c(0.25,1,0.25,1)
multiCoords[2:5,1:2] = c(0,0.25)
seq(0,1,length.out = 4)
seq(0,1,length.out = 5)
seq(1,0,length.out = 5)
multiCoords[2:5,3] = seq(1,0,length.out = 5)[2:5]
multiCoords[2:5,4] = seq(1,0,length.out = 5)[1:4]
multiCoords[6:8,3:4] = c(0,0.25)
seq(0.25,0.75, 0.25)
multiCoords[6:8,1] = seq(0.25,0.75, 0.25)
seq(0.5,1, 0.25)
multiCoords[6:8,2] = seq(0.5,1, 0.25)
par(mfcol = c(1,1), oma = c(0,0,0,0) + 0.1, mar = c(0,0,1,0)+0.3, las=1, mgp=c(1.5, 0.5, 0), lwd=75/75, cex.axis=3/3, cex.lab=2/3, tcl=(-0.2),font.axis = 2, bty="l")
bestTest2 = bestTest
bestTrain2 = bestTrain
bestTest2$tss = bestTest2$tss/2
bestTrain2$tss = bestTrain2$tss/2
Aranea::multiSpider(x1 = bestTest2[,c(1,4,8:10)], x2 = bestTrain2[,c(1,4,8:10)],
cexSteps = c(NA,0.7),cexProcent = c(0.5,0.5),
alphaRec = 0.3, alphaSpider = 0.4,
colRec = cols, colRecBorder  = cols,
titles =  c("naive", "BRT", "SVM", "kNN", "DNN", "CNN" ,"RF"), cexPoints = 0.7,
stepsText = c("AUC", "ACC", "Prec", "Spec", "Sens"),
twistSteps = 18,circleLines = c(5,3),
rectangular = T, multiCoords = multiCoords)
multiCoords
multiCoords = matrix(0,8,4)
multiCoords[1,] = c(0.25,1,0.25,1)
multiCoords[2:5,1:2] = c(0,0.25)
multiCoords[2:5,3] = seq(1,0,length.out = 5)[2:5]
multiCoords[2:5,4] = seq(1,0,length.out = 5)[1:4]
multiCoords[6:8,3:4] = c(0,0.25)
multiCoords[6:8,1] = seq(0.25,0.75, 0.25)
multiCoords[6:8,2] = seq(0.5,1, 0.25)
multiCoords
multiCoords[2:5,1:2]
multiCoords = matrix(0,8,4)
multiCoords[1,] = c(0.25,1,0.25,1)
multiCoords[2:5,1] = 0
multiCoords[2:5,2] = 0.25
multiCoords[2:5,3] = seq(1,0,length.out = 5)[2:5]
multiCoords[2:5,4] = seq(1,0,length.out = 5)[1:4]
multiCoords[6:8,3:4] = c(0,0.25)
multiCoords[6:8,1] = seq(0.25,0.75, 0.25)
multiCoords[6:8,2] = seq(0.5,1, 0.25)
multiCoords
par(mfcol = c(1,1), oma = c(0,0,0,0) + 0.1, mar = c(0,0,1,0)+0.3, las=1, mgp=c(1.5, 0.5, 0), lwd=75/75, cex.axis=3/3, cex.lab=2/3, tcl=(-0.2),font.axis = 2, bty="l")
bestTest2 = bestTest
bestTrain2 = bestTrain
bestTest2$tss = bestTest2$tss/2
bestTrain2$tss = bestTrain2$tss/2
Aranea::multiSpider(x1 = bestTest2[,c(1,4,8:10)], x2 = bestTrain2[,c(1,4,8:10)],
cexSteps = c(NA,0.7),cexProcent = c(0.5,0.5),
alphaRec = 0.3, alphaSpider = 0.4,
colRec = cols, colRecBorder  = cols,
titles =  c("naive", "BRT", "SVM", "kNN", "DNN", "CNN" ,"RF"), cexPoints = 0.7,
stepsText = c("AUC", "ACC", "Prec", "Spec", "Sens"),
twistSteps = 18,circleLines = c(5,3),
rectangular = T, multiCoords = multiCoords)
legend(x = 10,y = -12,border = "n",legend = c("Validation", "Training"), lty = c(1,2),xpd = NA, cex = 0.7, bty = "n", text.font = 2)
multiCoords = matrix(0,8,4)
multiCoords[1,] = c(0.25,1,0.25,1)
multiCoords[2:5,1] = 0
multiCoords[2:5,2] = 0.25
multiCoords[2:5,3] = seq(1,0,length.out = 5)[2:5]
multiCoords[2:5,4] = seq(1,0,length.out = 5)[1:4]
multiCoords[6:8,3] = 0
multiCoords[6:8,4] = 0.25
multiCoords[6:8,1] = seq(0.25,0.75, 0.25)
multiCoords[6:8,2] = seq(0.5,1, 0.25)
par(mfcol = c(1,1), oma = c(0,0,0,0) + 0.1, mar = c(0,0,1,0)+0.3, las=1, mgp=c(1.5, 0.5, 0), lwd=75/75, cex.axis=3/3, cex.lab=2/3, tcl=(-0.2),font.axis = 2, bty="l")
bestTest2 = bestTest
bestTrain2 = bestTrain
bestTest2$tss = bestTest2$tss/2
bestTrain2$tss = bestTrain2$tss/2
Aranea::multiSpider(x1 = bestTest2[,c(1,4,8:10)], x2 = bestTrain2[,c(1,4,8:10)],
cexSteps = c(NA,0.7),cexProcent = c(0.5,0.5),
alphaRec = 0.3, alphaSpider = 0.4,
colRec = cols, colRecBorder  = cols,
titles =  c("naive", "BRT", "SVM", "kNN", "DNN", "CNN" ,"RF"), cexPoints = 0.7,
stepsText = c("AUC", "ACC", "Prec", "Spec", "Sens"),
twistSteps = 18,circleLines = c(5,3),
rectangular = T, multiCoords = multiCoords)
bestTest2
multiCoords = matrix(0,8,4)
multiCoords[1,] = c(0.25, 0.75, 1/3, 1)
multiCoords[c(2:4),2] = 0.25
multiCoords[c(2:4),3] = c(2/3,1/3,0)
multiCoords[c(2:4),4] = c(1,2/3,1/3)
multiCoords[c(4:7),4] = 1/3
multiCoords[c(4:7),1] = seq(0,0,75,0.25)
multiCoords[c(4:7),1] = seq(0,0.75,0.25)
multiCoords[c(4:7),2] = seq(0.25,1,0.25)
multiCoords[8,] = c(0.75,1,1/3,2/3)
par(mfcol = c(1,1), oma = c(0,0,0,0) + 0.1, mar = c(0,0,1,0)+0.3, las=1, mgp=c(1.5, 0.5, 0), lwd=75/75, cex.axis=3/3, cex.lab=2/3, tcl=(-0.2),font.axis = 2, bty="l")
bestTest2 = bestTest
bestTrain2 = bestTrain
bestTest2$tss = bestTest2$tss/2
bestTrain2$tss = bestTrain2$tss/2
Aranea::multiSpider(x1 = bestTest2[,c(1,4,8:10)], x2 = bestTrain2[,c(1,4,8:10)],
cexSteps = c(NA,0.7),cexProcent = c(0.5,0.5),
alphaRec = 0.3, alphaSpider = 0.4,
colRec = cols, colRecBorder  = cols,
titles =  c("naive", "BRT", "SVM", "kNN", "DNN", "CNN" ,"RF"), cexPoints = 0.7,
stepsText = c("AUC", "ACC", "Prec", "Spec", "Sens"),
twistSteps = 18,circleLines = c(5,3),
rectangular = T, multiCoords = multiCoords)
legend(x = 10,y = -12,border = "n",legend = c("Validation", "Training"), lty = c(1,2),xpd = NA, cex = 0.7, bty = "n", text.font = 2)
pdf(file = "test.pdf", width = 5.5, height = 3/4*5.5)
par(mfcol = c(1,1), oma = c(0,0,0,0) + 0.1, mar = c(0,0,1,0)+0.3, las=1, mgp=c(1.5, 0.5, 0), lwd=75/75, cex.axis=3/3, cex.lab=2/3, tcl=(-0.2),font.axis = 2, bty="l")
bestTest2 = bestTest
bestTrain2 = bestTrain
bestTest2$tss = bestTest2$tss/2
bestTrain2$tss = bestTrain2$tss/2
Aranea::multiSpider(x1 = bestTest2[,c(1,4,8:10)], x2 = bestTrain2[,c(1,4,8:10)],
cexSteps = c(NA,0.7),cexProcent = c(0.5,0.5),
alphaRec = 0.3, alphaSpider = 0.4,
colRec = cols, colRecBorder  = cols,
titles =  c("naive", "BRT", "SVM", "kNN", "DNN", "CNN" ,"RF"), cexPoints = 0.7,
stepsText = c("AUC", "ACC", "Prec", "Spec", "Sens"),
twistSteps = 18,circleLines = c(5,3),
rectangular = T, multiCoords = multiCoords)
legend(x = 10,y = -12,border = "n",legend = c("Validation", "Training"), lty = c(1,2),xpd = NA, cex = 0.7, bty = "n", text.font = 2)
dev.off()
pdf(file = "test.pdf", width = 5.5, height = 3/4*5.5)
par(mfcol = c(1,1), oma = c(0,0,0,0) + 0.1, mar = c(0,0,1,0)+0.3, las=1, mgp=c(1.5, 0.5, 0), lwd=75/75, cex.axis=3/3, cex.lab=2/3, tcl=(-0.2),font.axis = 2, bty="l")
bestTest2 = bestTest
bestTrain2 = bestTrain
bestTest2$tss = bestTest2$tss/2
bestTrain2$tss = bestTrain2$tss/2
Aranea::multiSpider(x1 = bestTest2[,c(1,4,8:10)], x2 = bestTrain2[,c(1,4,8:10)],
cexSteps = c(NA,0.7),cexProcent = c(0.5,0.5),
alphaRec = 0.3, alphaSpider = 0.4,
colRec = cols, colRecBorder  = cols,
titles =  c("naive", "BRT", "SVM", "kNN", "DNN", "CNN" ,"RF"), cexPoints = 0.7,
stepsText = c("AUC", "ACC", "Prec", "Spec", "Sens"),
twistSteps = 18,circleLines = c(5,3),
rectangular = T, multiCoords = multiCoords, parValues = list(pty = "m"))
legend(x = 10,y = -12,border = "n",legend = c("Validation", "Training"), lty = c(1,2),xpd = NA, cex = 0.7, bty = "n", text.font = 2)
dev.off()
pdf(file = "test.pdf", width = 5.5, height = 3/4*5.5)
par(mfcol = c(1,1), oma = c(0,0,0,0) + 0.1, mar = c(0,0,1,0)+0.3, las=1, mgp=c(1.5, 0.5, 0), lwd=75/75, cex.axis=3/3, cex.lab=2/3, tcl=(-0.2),font.axis = 2, bty="l")
bestTest2 = bestTest
bestTrain2 = bestTrain
bestTest2$tss = bestTest2$tss/2
bestTrain2$tss = bestTrain2$tss/2
Aranea::multiSpider(x1 = bestTest2[,c(1,4,8:10)], x2 = bestTrain2[,c(1,4,8:10)],
cexSteps = c(NA,0.7),cexProcent = c(0.5,0.5),
alphaRec = 0.3, alphaSpider = 0.4,
colRec = cols, colRecBorder  = cols,
titles =  c("naive", "BRT", "SVM", "kNN", "DNN", "CNN" ,"RF"), cexPoints = 0.7,
stepsText = c("AUC", "ACC", "Prec", "Spec", "Sens"),
twistSteps = 18,circleLines = c(5,3),
rectangular = T, multiCoords = multiCoords, parValues = list(pty = "m"))
legend(x = 10,y = -12,border = "n",legend = c("Validation", "Training"), lty = c(1,2),xpd = NA, cex = 0.7, bty = "n", text.font = 2)
dev.off()
5.5/4
pdf(file = "test.pdf", width = 5.5, height = 3/4*5.5)
par(mfcol = c(1,1), oma = c(0,0,0,0) + 0.1, mar = c(0,0,0,0)+0.3, las=1, mgp=c(1.5, 0.5, 0), lwd=75/75, cex.axis=3/3, cex.lab=2/3, tcl=(-0.2),font.axis = 2, bty="l")
bestTest2 = bestTest
bestTrain2 = bestTrain
bestTest2$tss = bestTest2$tss/2
bestTrain2$tss = bestTrain2$tss/2
Aranea::multiSpider(x1 = bestTest2[,c(1,4,8:10)], x2 = bestTrain2[,c(1,4,8:10)],
cexSteps = c(NA,0.7),cexProcent = c(0.5,0.5),
alphaRec = 0.3, alphaSpider = 0.4,
colRec = cols, colRecBorder  = cols,
titles =  c("naive", "BRT", "SVM", "kNN", "DNN", "CNN" ,"RF"), cexPoints = 0.7,
stepsText = c("AUC", "ACC", "Prec", "Spec", "Sens"),
twistSteps = 18,circleLines = c(5,3),
rectangular = T, multiCoords = multiCoords, parValues = list(pty = "m"))
legend(x = 10,y = -12,border = "n",legend = c("Validation", "Training"), lty = c(1,2),xpd = NA, cex = 0.7, bty = "n", text.font = 2)
dev.off()
pdf(file = "test.pdf", width = 5.5, height = 3/4*5.5)
par(mfcol = c(1,1), oma = c(0,0,0,0) + 0.1, mar = c(0,0,0,0)+0.3, las=1, mgp=c(1.5, 0.5, 0), lwd=75/75, cex.axis=3/3, cex.lab=2/3, tcl=(-0.2),font.axis = 2, bty="l")
bestTest2 = bestTest
bestTrain2 = bestTrain
bestTest2$tss = bestTest2$tss/2
bestTrain2$tss = bestTrain2$tss/2
Aranea::multiSpider(x1 = bestTest2[,c(1,4,8:10)], x2 = bestTrain2[,c(1,4,8:10)],
cexSteps = c(NA,0.7),cexProcent = c(0.5,0.5),
alphaRec = 0.3, alphaSpider = 0.4,
colRec = cols, colRecBorder  = cols,
titles =  c("naive", "BRT", "SVM", "kNN", "DNN", "CNN" ,"RF"), cexPoints = 0.7,
stepsText = c("AUC", "ACC", "Prec", "Spec", "Sens"),
twistSteps = 18,circleLines = c(5,3),
rectangular = T, multiCoords = multiCoords, parValues = list(pty = "s"))
legend(x = 10,y = -12,border = "n",legend = c("Validation", "Training"), lty = c(1,2),xpd = NA, cex = 0.7, bty = "n", text.font = 2)
dev.off()
cols = addA(RColorBrewer::brewer.pal(n = 9, name = 'Set1')[c(1:5,7,8)], 0.8)
pdf(file = "test.pdf", width = 5.5, height = 3/4*5.5)
par(mfcol = c(1,1), oma = c(0,0,0,0) + 0.1, mar = c(0,0,0,0)+0.3, las=1, mgp=c(1.5, 0.5, 0), lwd=75/75, cex.axis=3/3, cex.lab=2/3, tcl=(-0.2),font.axis = 2, bty="l")
bestTest2 = bestTest
bestTrain2 = bestTrain
bestTest2$tss = bestTest2$tss/2
bestTrain2$tss = bestTrain2$tss/2
Aranea::multiSpider(x1 = bestTest2[,c(1,4,8:10)], x2 = bestTrain2[,c(1,4,8:10)],
cexSteps = c(NA,0.7),cexProcent = c(0.5,0.5),
alphaRec = 0.3, alphaSpider = 0.4,
colRec = cols, colRecBorder  = cols,
titles =  c("naive", "BRT", "SVM", "kNN", "DNN", "CNN" ,"RF"), cexPoints = 0.7,
stepsText = c("AUC", "ACC", "Prec", "Spec", "Sens"),
twistSteps = 18,circleLines = c(5,3),
rectangular = T, multiCoords = multiCoords)
legend(x = 10,y = -12,border = "n",legend = c("Validation", "Training"), lty = c(1,2),xpd = NA, cex = 0.7, bty = "n", text.font = 2)
dev.off()
cols = addA(RColorBrewer::brewer.pal(n = 9, name = 'Set1')[c(1:5,7,8)], 0.8)
pdf(file = "test.pdf", width = 5.5, height = 3/4*5.5)
par(mfcol = c(1,1), oma = c(0,0,0,0) + 0.1, mar = c(0,0,0,0)+0.3, las=1, mgp=c(1.5, 0.5, 0), lwd=75/75, cex.axis=3/3, cex.lab=2/3, tcl=(-0.2),font.axis = 2, bty="l")
bestTest2 = bestTest
bestTrain2 = bestTrain
bestTest2$tss = bestTest2$tss/2
bestTrain2$tss = bestTrain2$tss/2
Aranea::multiSpider(x1 = bestTest2[,c(1,4,8:10)], x2 = bestTrain2[,c(1,4,8:10)],
cexSteps = c(NA,0.7),cexProcent = c(0.5,0.5),
alphaRec = 0.3, alphaSpider = 0.4,
colRec = cols, colRecBorder  = cols,
titles =  c("naive", "BRT", "SVM", "kNN", "DNN", "CNN" ,"RF"), cexPoints = 0.7,
stepsText = c("AUC", "ACC", "Prec", "Spec", "Sens"),
twistSteps = 18,circleLines = c(5,3),
rectangular = T, multiCoords = multiCoords)
legend(x = 10,y = -12,border = "n",legend = c("Validation", "Training"), lty = c(1,2),xpd = NA, cex = 0.7, bty = "n", text.font = 2)
dev.off()
library(Aranea)
par(mfcol = c(1,1), oma = c(0,0,0,0) + 0.1, mar = c(0,0,0,0)+0.3, las=1, mgp=c(1.5, 0.5, 0), lwd=75/75, cex.axis=3/3, cex.lab=2/3, tcl=(-0.2),font.axis = 2, bty="l")
bestTest2 = bestTest
bestTrain2 = bestTrain
bestTest2$tss = bestTest2$tss/2
bestTrain2$tss = bestTrain2$tss/2
Aranea::multiSpider(x1 = bestTest2[,c(1,4,8:10)], x2 = bestTrain2[,c(1,4,8:10)],
cexSteps = c(NA,0.7),cexProcent = c(0.5,0.5),
alphaRec = 0.3, alphaSpider = 0.4,
colRec = cols, colRecBorder  = cols,
titles =  c("naive", "BRT", "SVM", "kNN", "DNN", "CNN" ,"RF"), cexPoints = 0.7,
stepsText = c("AUC", "ACC", "Prec", "Spec", "Sens"),
twistSteps = 18,circleLines = c(5,3),
rectangular = T, multiCoords = multiCoords, cexTitles = 0.7)
legend(x = 10,y = -12,border = "n",legend = c("Validation", "Training"), lty = c(1,2),xpd = NA, cex = 0.7, bty = "n", text.font = 2)
par(mfcol = c(1,1), oma = c(0,0,0,0) + 0.1, mar = c(0,0,0,0)+0.3, las=1, mgp=c(1.5, 0.5, 0), lwd=75/75, cex.axis=3/3, cex.lab=2/3, tcl=(-0.2),font.axis = 2, bty="l")
bestTest2 = bestTest
bestTrain2 = bestTrain
bestTest2$tss = bestTest2$tss/2
bestTrain2$tss = bestTrain2$tss/2
Aranea::multiSpider(x1 = bestTest2[,c(1,4,8:10)], x2 = bestTrain2[,c(1,4,8:10)],
cexSteps = c(NA,0.7),cexProcent = c(0.5,0.5),
alphaRec = 0.3, alphaSpider = 0.4,
colRec = cols, colRecBorder  = cols,
titles =  c("naive", "BRT", "SVM", "kNN", "DNN", "CNN" ,"RF"), cexPoints = 0.7,
stepsText = c("AUC", "ACC", "Prec", "Spec", "Sens"),
twistSteps = 18,circleLines = c(5,3),
rectangular = T, multiCoords = multiCoords, cexTitles = 10)
legend(x = 10,y = -12,border = "n",legend = c("Validation", "Training"), lty = c(1,2),xpd = NA, cex = 0.7, bty = "n", text.font = 2)
plot(NULL, NULL, xlim = c(1,0), ylim = c(1,0))
title("hey", cex = 10)
title("hey", cex = 10)
title("hey", cex = 1)
title("hey", cex.sub = 10)
title("hey", cex.sub = 1)
plot(NULL, NULL, xlim = c(1,0), ylim = c(1,0))
title("hey", cex.sub = 10)
plot(NULL, NULL, xlim = c(1,0), ylim = c(1,0))
title("hey", cex.main = 10)
library(Aranea)
par(mfcol = c(1,1), oma = c(0,0,0,0) + 0.1, mar = c(0,0,0,0)+0.3, las=1, mgp=c(1.5, 0.5, 0), lwd=75/75, cex.axis=3/3, cex.lab=2/3, tcl=(-0.2),font.axis = 2, bty="l")
bestTest2 = bestTest
bestTrain2 = bestTrain
bestTest2$tss = bestTest2$tss/2
bestTrain2$tss = bestTrain2$tss/2
Aranea::multiSpider(x1 = bestTest2[,c(1,4,8:10)], x2 = bestTrain2[,c(1,4,8:10)],
cexSteps = c(NA,0.7),cexProcent = c(0.5,0.5),
alphaRec = 0.3, alphaSpider = 0.4,
colRec = cols, colRecBorder  = cols,
titles =  c("naive", "BRT", "SVM", "kNN", "DNN", "CNN" ,"RF"), cexPoints = 0.7,
stepsText = c("AUC", "ACC", "Prec", "Spec", "Sens"),
twistSteps = 18,circleLines = c(5,3),
rectangular = T, multiCoords = multiCoords, cexTitles = 10)
legend(x = 10,y = -12,border = "n",legend = c("Validation", "Training"), lty = c(1,2),xpd = NA, cex = 0.7, bty = "n", text.font = 2)
par(mfcol = c(1,1), oma = c(0,0,0,0) + 0.1, mar = c(0,0,0,0)+0.3, las=1, mgp=c(1.5, 0.5, 0), lwd=75/75, cex.axis=3/3, cex.lab=2/3, tcl=(-0.2),font.axis = 2, bty="l")
bestTest2 = bestTest
bestTrain2 = bestTrain
bestTest2$tss = bestTest2$tss/2
bestTrain2$tss = bestTrain2$tss/2
Aranea::multiSpider(x1 = bestTest2[,c(1,4,8:10)], x2 = bestTrain2[,c(1,4,8:10)],
cexSteps = c(NA,0.7),cexProcent = c(0.5,0.5),
alphaRec = 0.3, alphaSpider = 0.4,
colRec = cols, colRecBorder  = cols,
titles =  c("naive", "BRT", "SVM", "kNN", "DNN", "CNN" ,"RF"), cexPoints = 0.7,
stepsText = c("AUC", "ACC", "Prec", "Spec", "Sens"),
twistSteps = 18,circleLines = c(5,3),
rectangular = T, multiCoords = multiCoords, cexTitles = 0.7)
legend(x = 10,y = -12,border = "n",legend = c("Validation", "Training"), lty = c(1,2),xpd = NA, cex = 0.7, bty = "n", text.font = 2)
cols = addA(RColorBrewer::brewer.pal(n = 9, name = 'Set1')[c(1:5,7,8)], 0.8)
pdf(file = "test.pdf", width = 5.5, height = 3/4*4.5)
par(mfcol = c(1,1), oma = c(0,0,0,0) + 0.1, mar = c(0,0,0,0)+0.3, las=1, mgp=c(1.5, 0.5, 0), lwd=75/75, cex.axis=3/3, cex.lab=2/3, tcl=(-0.2),font.axis = 2, bty="l")
bestTest2 = bestTest
bestTrain2 = bestTrain
bestTest2$tss = bestTest2$tss/2
bestTrain2$tss = bestTrain2$tss/2
Aranea::multiSpider(x1 = bestTest2[,c(1,4,8:10)], x2 = bestTrain2[,c(1,4,8:10)],
cexSteps = c(NA,0.7),cexProcent = c(0.5,0.5),
alphaRec = 0.3, alphaSpider = 0.4,
colRec = cols, colRecBorder  = cols,
titles =  c("naive", "BRT", "SVM", "kNN", "DNN", "CNN" ,"RF"), cexPoints = 0.7,
stepsText = c("AUC", "ACC", "Prec", "Spec", "Sens"),
twistSteps = 18,circleLines = c(5,3),
rectangular = T, multiCoords = multiCoords, cexTitles = 0.7)
legend(x = 10,y = -12,border = "n",legend = c("Validation", "Training"), lty = c(1,2),xpd = NA, cex = 0.7, bty = "n", text.font = 2)
dev.off()
cols = addA(RColorBrewer::brewer.pal(n = 9, name = 'Set1')[c(1:5,7,8)], 0.8)
pdf(file = "test.pdf", width = 5.5, height = 3/4*4.5)
par(mfcol = c(1,1), oma = c(0,0,0,0) + 0.1, mar = c(0,0,0,0)+0.3, las=1, mgp=c(1.5, 0.5, 0), lwd=75/75, cex.axis=3/3, cex.lab=2/3, tcl=(-0.2),font.axis = 2, bty="l")
bestTest2 = bestTest
bestTrain2 = bestTrain
bestTest2$tss = bestTest2$tss/2
bestTrain2$tss = bestTrain2$tss/2
Aranea::multiSpider(x1 = bestTest2[,c(1,4,8:10)], x2 = bestTrain2[,c(1,4,8:10)],
cexSteps = c(NA,0.7),cexProcent = c(0.5,0.5),
alphaRec = 0.3, alphaSpider = 0.4,
colRec = cols, colRecBorder  = cols,
titles =  c("naive", "BRT", "SVM", "kNN", "DNN", "CNN" ,"RF"), cexPoints = 0.7,
stepsText = c("AUC", "ACC", "Prec", "Spec", "Sens"),
twistSteps = 18,circleLines = c(5,3),
rectangular = T, multiCoords = multiCoords, cexTitles = 0.7)
legend(x = 10,y = -12,border = "n",legend = c("Validation", "Training"), lty = c(1,2),xpd = NA, cex = 0.7, bty = "n", text.font = 2)
dev.off()
cols = addA(RColorBrewer::brewer.pal(n = 9, name = 'Set1')[c(1:5,7,8)], 0.8)
pdf(file = "test.pdf", width = 5.5, height = 3/4*5)
par(mfcol = c(1,1), oma = c(0,0,0,0) + 0.1, mar = c(0,0,0,0)+0.3, las=1, mgp=c(1.5, 0.5, 0), lwd=75/75, cex.axis=3/3, cex.lab=2/3, tcl=(-0.2),font.axis = 2, bty="l")
bestTest2 = bestTest
bestTrain2 = bestTrain
bestTest2$tss = bestTest2$tss/2
bestTrain2$tss = bestTrain2$tss/2
Aranea::multiSpider(x1 = bestTest2[,c(1,4,8:10)], x2 = bestTrain2[,c(1,4,8:10)],
cexSteps = c(NA,0.7),cexProcent = c(0.5,0.5),
alphaRec = 0.3, alphaSpider = 0.4,
colRec = cols, colRecBorder  = cols,
titles =  c("naive", "BRT", "SVM", "kNN", "DNN", "CNN" ,"RF"), cexPoints = 0.7,
stepsText = c("AUC", "ACC", "Prec", "Spec", "Sens"),
twistSteps = 18,circleLines = c(5,3),
rectangular = T, multiCoords = multiCoords, cexTitles = 0.7)
legend(x = 10,y = -12,border = "n",legend = c("Validation", "Training"), lty = c(1,2),xpd = NA, cex = 0.7, bty = "n", text.font = 2)
dev.off()
pdf(file = "test.pdf", width = 5.5, height = 3/4*5)
par(mfcol = c(1,1), oma = c(0,0,0,0) + 0.1, mar = c(0,0,0,0)+0.3, las=1, mgp=c(1.5, 0.5, 0), lwd=75/75, cex.axis=3/3, cex.lab=2/3, tcl=(-0.2),font.axis = 2, bty="l")
bestTest2 = bestTest
bestTrain2 = bestTrain
bestTest2$tss = bestTest2$tss/2
bestTrain2$tss = bestTrain2$tss/2
Aranea::multiSpider(x1 = bestTest2[,c(1,4,8:10)], x2 = bestTrain2[,c(1,4,8:10)],
cexSteps = c(NA,0.5),cexProcent = c(0.4,0.4),
alphaRec = 0.3, alphaSpider = 0.4,
colRec = cols, colRecBorder  = cols,
titles =  c("naive", "BRT", "SVM", "kNN", "DNN", "CNN" ,"RF"), cexPoints = 0.7,
stepsText = c("AUC", "ACC", "Prec", "Spec", "Sens"),
twistSteps = 18,circleLines = c(5,3),
rectangular = T, multiCoords = multiCoords, cexTitles = 0.7)
legend(x = 10,y = -12,border = "n",legend = c("Validation", "Training"), lty = c(1,2),xpd = NA, cex = 0.7, bty = "n", text.font = 2)
dev.off()
cols = addA(RColorBrewer::brewer.pal(n = 9, name = 'Set1')[c(1:5,7,8)], 0.8)
pdf(file = "test.pdf", width = 5.5, height = 3/4*5)
par(mfcol = c(1,1), oma = c(0,0,0,0) + 0.1, mar = c(0,0,0,0)+0.3, las=1, mgp=c(1.5, 0.5, 0), lwd=75/75, cex.axis=3/3, cex.lab=2/3, tcl=(-0.2),font.axis = 2, bty="l")
bestTest2 = bestTest
bestTrain2 = bestTrain
bestTest2$tss = bestTest2$tss/2
bestTrain2$tss = bestTrain2$tss/2
Aranea::multiSpider(x1 = bestTest2[,c(1,4,8:10)], x2 = bestTrain2[,c(1,4,8:10)],
cexSteps = c(NA,0.5),cexProcent = c(0.4,0.4),
alphaRec = 0.3, alphaSpider = 0.4,
colRec = cols, colRecBorder  = cols,
titles =  c("naive", "BRT", "SVM", "kNN", "DNN", "CNN" ,"RF"), cexPoints = 0.7,
stepsText = c("AUC", "ACC", "Prec", "Spec", "Sens"),
twistSteps = 18,circleLines = c(5,3),
rectangular = T, multiCoords = multiCoords, cexTitles = 0.7)
legend(x = 10,y = -2,border = "n",legend = c("Validation", "Training"), lty = c(1,2),xpd = NA, cex = 0.7, bty = "n", text.font = 2)
dev.off()
cols = addA(RColorBrewer::brewer.pal(n = 9, name = 'Set1')[c(1:5,7,8)], 0.8)
pdf(file = "test.pdf", width = 5.5, height = 3/4*5)
par(mfcol = c(1,1), oma = c(0,0,0,0) + 0.1, mar = c(0,0,0,0)+0.3, las=1, mgp=c(1.5, 0.5, 0), lwd=75/75, cex.axis=3/3, cex.lab=2/3, tcl=(-0.2),font.axis = 2, bty="l")
bestTest2 = bestTest
bestTrain2 = bestTrain
bestTest2$tss = bestTest2$tss/2
bestTrain2$tss = bestTrain2$tss/2
Aranea::multiSpider(x1 = bestTest2[,c(1,4,8:10)], x2 = bestTrain2[,c(1,4,8:10)],
cexSteps = c(NA,0.5),cexProcent = c(0.4,0.4),
alphaRec = 0.3, alphaSpider = 0.4,
colRec = cols, colRecBorder  = cols,
titles =  c("naive", "BRT", "SVM", "kNN", "DNN", "CNN" ,"RF"), cexPoints = 0.7,
stepsText = c("AUC", "ACC", "Prec", "Spec", "Sens"),
twistSteps = 18,circleLines = c(5,3),
rectangular = T, multiCoords = multiCoords, cexTitles = 0.7)
legend(x = 10,y = 5,border = "n",legend = c("Validation", "Training"), lty = c(1,2),xpd = NA, cex = 0.7, bty = "n", text.font = 2)
dev.off()
pdf(file = "test.pdf", width = 5.5, height = 3/4*5)
par(mfcol = c(1,1), oma = c(0,0,0,0) + 0.1, mar = c(0,0,0,0)+0.3, las=1, mgp=c(1.5, 0.5, 0), lwd=75/75, cex.axis=3/3, cex.lab=2/3, tcl=(-0.2),font.axis = 2, bty="l")
bestTest2 = bestTest
bestTrain2 = bestTrain
bestTest2$tss = bestTest2$tss/2
bestTrain2$tss = bestTrain2$tss/2
Aranea::multiSpider(x1 = bestTest2[,c(1,4,8:10)], x2 = bestTrain2[,c(1,4,8:10)],
cexSteps = c(NA,0.5),cexProcent = c(0.4,0.4),
alphaRec = 0.3, alphaSpider = 0.4,
colRec = cols, colRecBorder  = cols,
titles =  c("naive", "BRT", "SVM", "kNN", "DNN", "CNN" ,"RF"), cexPoints = 0.7,
stepsText = c("AUC", "ACC", "Prec", "Spec", "Sens"),
twistSteps = 18,circleLines = c(5,3),
rectangular = T, multiCoords = multiCoords, cexTitles = 0.7)
legend(x = 10,y = 5,border = "n",legend = c("Validation", "Training"), lty = c(1,2),xpd = NA, cex = 0.5, bty = "n", text.font = 2)
dev.off()
3/4*5
